grammar Six
{
    rules
    {
        full-prefix
            = attribute* declaration-modifiers?

        access-prefix
            = attribute* access-level-modifier?

        mutation-prefix
            = attribute* mutation-modifier?

        // ------------------------------------
        // attributes / modifiers
        // ------------------------------------
        attribute
            = '@inlinable'
            / '@frozen'
            / '@escaping'
            / '@autoclosure'
            / '@usableFromInline'
            / '@discardableResult'
            / '@nonobjc'
            / '@unknown'
            / '@main'
            / '@testable'
            / '@inline' '(' ('never' / '__always') ')'
            / '@available' '(' (name / swift-version / ',' / ':' / '*' / static-string-literal)+ ')'
            / '@convention' '(' ('block'/'thin'/'c') ')'
            / '@objc' ( '(' (':' / name)+ ')' )?
            / '@_show_in_interface'
            / '@_fixed_layout'
            / '@_nonoverride'
            / '@_borrowed'
            / '@_transparent'
            / '@_nonEphemeral'
            / '@_alwaysEmitIntoClient'
            / '@_objc_non_lazy_realization'
            / '@_implements' '(' type-identifier (',' type-identifier)* ')'
            / '@_specialize' '(' generic-where-clause ')'
            / '@_effects' '(' ('readnone' / 'readonly' / 'releasenone') ')'
            / '@_silgen_name' '(' static-string-literal ')'
            / '@_semantics' '(' static-string-literal ')'
            / '@_objcRuntimeName' '(' name ')'
            / '@_cdecl' '(' static-string-literal ')'
            / '@unsafe_no_objc_tagged_pointer'
            / '@derivative' '(' 'of' ':' 'init' '(' '_' ':' '_' ':' ')' ')'
            / '@' #error( "attribute" )

        declaration-modifiers
            = modifier+

        modifier
            = _ modifier-token

        modifier-token    
            = access-level-modifier
            / declaration-modifier
            / mutation-modifier

        declaration-modifier
            = 'class'
            / 'convenience'
            / 'dynamic'
            / 'final'
            / 'infix'
            / 'lazy'
            / 'optional'
            / 'override'
            / 'postfix'
            / 'prefix'
            / 'required'
            / 'static'
            / 'unowned' ( '(' ('safe' / 'unsafe') ')' )?
            / 'weak'
            / '__consuming'

        access-level-modifier
            = access-modifier-base ( '(' 'set' ')' )?

        access-modifier-base
            = 'private'
            / 'fileprivate'
            / 'internal'
            / 'public'
            / 'open'

        mutation-modifier
            = 'mutating'
            / 'nonmutating'
    }
}


