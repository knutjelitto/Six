// ====================================
// == Generics
// ====================================

grammar Swift
{
    rules
    {
        generic-parameter-clause
            : '<' generic-parameters '>'
            | '<' #error( "generic-parameters" )

        generic-parameters
            = generic-parameter (',' generic-parameter)*

        generic-parameter
            = type-name ':' protocol-composition-type
            / type-name ':' type-identifier
            / type-name
            / #error( "generic-parameter" )

        generic-where-clause
            = 'where' requirement-list
            / 'where' #error("where-clause")
            / &'where' #error("where-clause")

        requirement-list
            = requirement (',' requirement)*

        requirement
            = type-identifier ':' protocol-composition-type
            / type-identifier ':' type-identifier
            / type-identifier '==' type

        generic-argument-clause
            = '<' generic-arguments '>'

        generic-arguments
            = generic-argument (',' generic-argument)*

        generic-argument
            = type
    }
}