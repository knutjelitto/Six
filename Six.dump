unit::
    sequence
        zero-or-more
            ref statement
        ref EOF

EOF::
    _ not
        match any

statement::
    ref declaration-statement

declaration-statement::
    ref declaration

declaration::
    ref function-declaration

function-declaration::
    sequence
        ref prefix
        ref 'func'
        ref function-name
        ref generic-parameter-clause
        ref function-parameter-clause
        ref maythrow
        ref function-result
        zero-or-more
            match any

maythrow::
    zero-or-one
        choice
            ref 'throws'
            ref 'rethrows'

function-name::
    choice
        ref name
        #error(...)

function-parameter-clause::
    choice
        sequence
            ref '('
            zero-or-one
                ref function-parameters
            ref ')'
        #error(...)

function-parameters::
    sequence
        ref function-parameter
        zero-or-more
            sequence
                ref ','
                ref function-parameter

function-parameter::
    choice
        sequence
            ref external-name
            ref local-name
            ref type-annotation
            ref default-argument
        sequence
            ref external-name
            ref local-name
            ref type-annotation
            ref '...'
        sequence
            ref external-name
            ref local-name
            ref type-annotation
        sequence
            ref local-name
            ref type-annotation
            ref default-argument
        sequence
            ref local-name
            ref type-annotation
            ref '...'
        sequence
            ref local-name
            ref type-annotation

function-result::
    choice
        sequence
            ref '->'
            ref attributes
            ref type
        sequence
            ref '->'
            #error(...)

external-name::
    ref name

local-name::
    ref name

default-argument::
    _ sequence
        ref '='
        ref expression

type-annotation::
    sequence
        ref ':'
        zero-or-more
            ref attribute
        zero-or-one
            ref 'inout'
        ref type

generic-parameter-clause::
    choice
        sequence
            ref '<'
            ref generic-parameters
            ref '>'
        sequence
            ref '<'
            #error(...)
        epsilon

generic-parameters::
    sequence
        ref generic-parameter
        zero-or-more
            sequence
                ref ','
                ref generic-parameter

generic-parameter::
    choice
        sequence
            ref type-name
            ref ':'
            ref protocol-composition-type
        sequence
            ref type-name
            ref ':'
            ref type-identifier
        ref type-name
        #error(...)

generic-argument-clause::
    choice
        sequence
            ref '<'
            ref generic-arguments
            ref '>'
        sequence
            ref '<'
            #error(...)
        epsilon

generic-arguments::
    sequence
        ref generic-argument
        zero-or-more
            sequence
                ref ','
                ref generic-argument

generic-argument::
    ref type

prefix::
    sequence
        ref attributes
        ref modifiers

attributes::
    zero-or-more
        ref attribute

attribute::
    choice
        sequence
            ref '@'
            ref name
        sequence
            ref '@'
            #error(...)

modifiers::
    zero-or-more
        ref modifier

modifier::
    _ ref modifier-token

modifier-token::
    choice
        ref 'private'
        ref 'public'
        ref 'internal'

expression::
    ref name

type::
    choice
        ref type-identifier
        ref protocol-composition-type

type-name::
    ref name

type-identifier::
    sequence
        ref type-identifier-part
        zero-or-more
            sequence
                ref '.'
                ref type-identifier-part

type-identifier-part::
    sequence
        ref type-name
        ref generic-argument-clause

protocol-composition-type::
    sequence
        ref type-identifier
        one-or-more
            sequence
                ref '&'
                ref type-identifier

name::
    _ sequence
        choice
            match "a" .. "z"
            match "A" .. "Z"
            match "_"
        zero-or-more
            choice
                match "a" .. "z"
                match "A" .. "Z"
                match "0" .. "9"
                match "_"

_::
    zero-or-more
        ref space

space::
    one-or-more
        choice
            ref single-line-comment
            ref multi-line-comment
            ref whitespace

single-line-comment::
    sequence
        match "//"
        zero-or-more
            sequence
                not
                    choice
                        match "\n"
                        match "\r"
                match any

multi-line-comment::
    sequence
        ref start-comment
        zero-or-more
            choice
                ref not-comment
                ref multi-line-comment
        ref stop-comment

not-comment::
    sequence
        not
            ref start-comment
        not
            ref stop-comment
        match any

start-comment::
    match "/*"

stop-comment::
    match "*/"

whitespace::
    choice
        match "\n"
        match "\r"
        match "\t"
        match " "

'func'::
    _ match "func"

'throws'::
    _ match "throws"

'rethrows'::
    _ match "rethrows"

'('::
    _ match "("

')'::
    _ match ")"

','::
    _ match ","

'...'::
    _ match "..."

'->'::
    _ match "->"

'='::
    _ match "="

':'::
    _ match ":"

'inout'::
    _ match "inout"

'<'::
    _ match "<"

'>'::
    _ match ">"

'@'::
    _ match "@"

'private'::
    _ match "private"

'public'::
    _ match "public"

'internal'::
    _ match "internal"

'.'::
    _ match "."

'&'::
    _ match "&"
