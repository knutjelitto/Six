grammar Go
{
    rules
    {
        SourceFile
            = PackageClause (ImportDecl ';?')* (TopLevelDecl ';?')* EOF

        PackageClause
            = 'package' PackageName ';?'

        PackageName
            = identifier

        ImportDecl
            = 'import' ( ImportSpec / '(' (ImportSpec ';?')* ')' )

        ImportSpec
            = ('.' / PackageName)? ImportPath

        ImportPath
            = string_lit
    }
    terminals
    {
        EOF = _ !.

        _   = whitespace*

        // imaginary ';' (maybe real ';')
        ';?'
            = ';'
            / &(line-end !(EOF / _ [)}]))
            / &(_ [)}])
            / &EOF
    }
}